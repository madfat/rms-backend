# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
# note: spring boot uses @property.name@ convention,
#       as oppose to ${property.name}

# Primary database configs
spring.datasource.url= jdbc:jtds:sqlserver://localhost:1433;databaseName=rmsolutiondb
spring.datasource.driver-class-name= net.sourceforge.jtds.jdbc.Driver
spring.datasource.username = sa
spring.datasource.password = Mitrais@1

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.generate-ddl = false

# WARNING DO NOT set this to CREATE on 2nd run
spring.jpa.hibernate.ddl-auto = none

# Naming strategy
spring.jpa.hibernate.naming.strategy= org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect

# ===============================
# = Data - Rest
# ===============================
spring.data.rest.basePath=/api

server.port= 7896
server.ssl.key-store= classpath:sample.jks
server.ssl.key-store-password=secret
server.ssl.key-password=password

app.cross.origin.https = https://localhost:4563
app.cross.origin.http = http://localhost:3000
